// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NSTUB(AllocateMemory, 0xffc01b1c)
NSTUB(AllocateUncacheableMemory, 0xffc047c4)
NSTUB(Close, 0xffc5a618)
NSTUB(CreatePhysicalVram, 0xffd09ff0)
NSTUB(CreateTask, 0xffc12364)
NSTUB(CreateTaskStrict, 0xffc13768)
NSTUB(DeleteFile_Fut, 0xffc534fc)
NSTUB(DisableDispatch, 0xffc120d4)
// Best match: 51%
NSTUB(DisplayImagePhysicalScreen, 0xffd093a8)
NSTUB(EnableDispatch, 0xffc12160)
NSTUB(ExecuteEventProcedure, 0xffc06a64)
NSTUB(ExitTask, 0xffc12724)
NSTUB(Fclose_Fut, 0xffc5363c)
NSTUB(Feof_Fut, 0xffc53850)
NSTUB(Fflush_Fut, 0xffc53888)
NSTUB(Fgets_Fut, 0xffc537c0)
NSTUB(Fopen_Fut, 0xffc53600)
NSTUB(Fread_Fut, 0xffc53720)
// Best match: 66%
NSTUB(FreeMemory, 0xffc01b28)
NSTUB(FreeUncacheableMemory, 0xffc047f8)
NSTUB(Fseek_Fut, 0xffc53808)
NSTUB(Fwrite_Fut, 0xffc53770)
NSTUB(GetCurrentAvValue, 0xffe2e0bc)
NSTUB(GetCurrentTargetDistance, 0xffe2e064)
// Best match: 90%
NSTUB(GetFocusLensSubjectDistance, 0xffe217a0)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffe217a0) // 28/3
// Best match: 52%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe21d40)
NSTUB(GetParameterData, 0xffd3e304)
NSTUB(GetPropertyCase, 0xffc155d8)
// Best match: 96%
NSTUB(GetSystemTime, 0xffc04b4c)
// ALT: NSTUB(GetSystemTime, 0xffc04b4c) // 26/1
// Best match: 93%
NSTUB(GetZoomLensCurrentPoint, 0xffe12554)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffe12554) // 27/2
// Best match: 93%
NSTUB(GetZoomLensCurrentPosition, 0xffe12568)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffe12568) // 27/2
NSTUB(IsStrobeChargeCompleted, 0xffce3b80)
// Best match: 96%
NSTUB(LockMainPower, 0xffd39888)
NSTUB(MakeDirectory, 0xffc5a8f0)
NSTUB(MakeDirectory_Fut, 0xffc53588)
// Best match: 90%
NSTUB(Mount_FileSystem, 0xffc598cc)
// ALT: NSTUB(Mount_FileSystem, 0xffc598cc) // 27/3
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffe2e2f4)
NSTUB(MoveZoomLensWithPoint, 0xffe12434)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffe12434) // 25/0
NSTUB(Open, 0xffc5a5f0)
// Best match: 96%
NSTUB(PhySw_testgpio, 0xffc18840)
NSTUB(PostLogicalEventForNotPowerType, 0xffd3597c)
NSTUB(PostLogicalEventToUI, 0xffd35a08)
// ALT: NSTUB(PostLogicalEventToUI, 0xffd35aa0) // 25/0
NSTUB(ProtectFile, 0xffc52c68)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffe2c0dc)
// ALT: NSTUB(PutInNdFilter, 0xffe2c0dc) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe2dc68) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe2dc68) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe2dcb0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffe2dcb0) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffe2c124)
// ALT: NSTUB(PutOutNdFilter, 0xffe2c124) // 16/1
NSTUB(Read, 0xffc5a6ac)
NSTUB(RefreshPhysicalScreen, 0xffd4e9f8)
NSTUB(Remove, 0xffc5a638)
NSTUB(RenameFile_Fut, 0xffc5347c)
NSTUB(Restart, 0xffc13bb0)
// Best match: 96%
NSTUB(SetAutoShutdownTime, 0xffd39780)
NSTUB(SetCurrentCaptureModeType, 0xffd64fa4)
// Best match: 87%
NSTUB(SetLogicalEventActive, 0xffd37938)
NSTUB(SetParameterData, 0xffd3e224)
NSTUB(SetPropertyCase, 0xffc154bc)
NSTUB(SleepTask, 0xffc121c4)
// ALT: NSTUB(SleepTask, 0xffc12278) // 31/0
NSTUB(TakeSemaphore, 0xffc11b80)
NSTUB(TurnOffBackLight, 0xffd7a150)
NSTUB(TurnOnBackLight, 0xffd7a124)
// Best match: 96%
NSTUB(UnlockMainPower, 0xffd3993c)
NSTUB(Unmount_FileSystem, 0xffc599d4)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xffd6fbf4)
// Best match: 96%
NSTUB(UpdateMBROnFlash, 0xffc59b2c)
// Best match: 51%
NSTUB(VbattGet, 0xffc1be54)
NSTUB(Write, 0xffc5a6b8)
NSTUB(_log, 0xffe5f084)
// ALT: NSTUB(_log, 0xffe5f084) // 27/0
NSTUB(_log10, 0xffe5f72c)
// ALT: NSTUB(_log10, 0xffe5f72c) // 27/0
NSTUB(_pow, 0xffe5fc1c)
// ALT: NSTUB(_pow, 0xffe5fc1c) // 25/0
NSTUB(_sqrt, 0xffe63f68)
// ALT: NSTUB(_sqrt, 0xffe63f68) // 24/0
// Best match: 96%
NSTUB(add_ptp_handler, 0xffde1470)
NSTUB(chdir, 0xffe731c4)
// ALT: NSTUB(chdir, 0xffe731c4) // 27/0
NSTUB(close, 0xffe72b04)
NSTUB(closedir, 0xffe6eaa4)
NSTUB(errnoOfTaskGet, 0xffe6f270)
// Best match: 90%
NSTUB(exmem_alloc, 0xffc02720)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffc0e2a4)
NSTUB(ints_enable, 0xffc0e2b0)
NSTUB(ioctl, 0xffe72c44)
NSTUB(iosDevAdd, 0xffe73d24)
NSTUB(iosDevDelete, 0xffe73cfc)
NSTUB(iosDevFind, 0xffe73cb0)
NSTUB(iosDrvInstall, 0xffe73fe8)
NSTUB(isalpha, 0xffe68a18)
NSTUB(isdigit, 0xffe68a48)
NSTUB(islower, 0xffe68a78)
NSTUB(ispunct, 0xffe68aa8)
NSTUB(isspace, 0xffe68ac0)
NSTUB(isupper, 0xffe68ad8)
NSTUB(isxdigit, 0xffe68af0)
NSTUB(kbd_p1_f, 0xffc17610)
NSTUB(kbd_p1_f_cont, 0xffc1761c)
NSTUB(kbd_p2_f, 0xffc179ec)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffc18eec)
// ALT: NSTUB(kbd_pwr_off, 0xffc18f08) // 5/1
// ERROR: kbd_pwr_on is not found!
NSTUB(kbd_read_keys_r2, 0xffc18304)
// Best match: 93%
NSTUB(localtime, 0xffe6d298)
NSTUB(lseek, 0xffe72c48)
// Best match: 53%
NSTUB(malloc, 0xffe75b44)
// ALT: NSTUB(malloc, 0xffe75b44) // 15/13
NSTUB(memPartInfoGet, 0xffe75f64)
NSTUB(memchr, 0xffe6c644)
NSTUB(memcmp, 0xffe6c678)
// ALT: NSTUB(memcmp, 0xffe7aa60) // 9/0
// ALT: NSTUB(memcmp, 0xfffd3f38) // 9/0
NSTUB(memcpy, 0xffe6c6b4)
NSTUB(memset, 0xffe6c72c)
NSTUB(mkdir, 0xffc5a834)
NSTUB(mktime, 0xffe6d460)
NSTUB(open, 0xffe73148)
NSTUB(opendir, 0xffe6ead8)
NSTUB(qsort, 0xffe6bed8)
NSTUB(rand, 0xffe6befc)
// ALT: NSTUB(rand, 0xffe6befc) // 8/0
NSTUB(read, 0xffe72b64)
NSTUB(readdir, 0xffe6ea70)
NSTUB(rename, 0xffe73150)
// ALT: NSTUB(rename, 0xffe73150) // 26/0
NSTUB(rewinddir, 0xffe6ea98)
NSTUB(srand, 0xffe6bf20)
// ALT: NSTUB(srand, 0xffe6bf20) // 4/0
NSTUB(stat, 0xffe6eb6c)
NSTUB(strcat, 0xffe6c74c)
NSTUB(strchr, 0xffe6c778)
NSTUB(strcmp, 0xffe6c79c)
NSTUB(strcpy, 0xffe6c930)
NSTUB(strftime, 0xffe6dfb8)
NSTUB(strlen, 0xffe6ca94)
NSTUB(strncmp, 0xffe6caf8)
NSTUB(strncpy, 0xffe6cb3c)
// ALT: NSTUB(strncpy, 0xffe6cb3c) // 24/0
NSTUB(strpbrk, 0xffe6cb84)
NSTUB(strrchr, 0xffe6cbc0)
// ALT: NSTUB(strrchr, 0xffe6cbc0) // 8/0
NSTUB(strtol, 0xffe6c314)
NSTUB(strtoul, 0xffe6c4bc)
NSTUB(taskCreateHookAdd, 0xffe791c4)
NSTUB(taskDeleteHookAdd, 0xffe79100)
// Best match: 82%
NSTUB(taskIdListGet, 0xffe83788)
NSTUB(taskLock, 0xffe83e44)
NSTUB(taskName, 0xffe83680)
NSTUB(taskResume, 0xffe83a64)
NSTUB(taskSuspend, 0xffe83890)
NSTUB(taskUnlock, 0xffe83eec)
NSTUB(time, 0xffe6dfe4)
// ALT: NSTUB(time, 0xffe6dfe4) // 25/0
NSTUB(tolower, 0xffe68b08)
NSTUB(toupper, 0xffe68b18)
NSTUB(utime, 0xffe6ec00)
// ALT: NSTUB(utime, 0xffe6ec00) // 26/0
NSTUB(vsprintf, 0xffe703c4)
NSTUB(write, 0xffe72bd4)
